#include <Arduino.h>
#include "WiFi.h"
#include <HTTPClient.h>
#include <LiquidCrystal_I2C.h>

String serverName = "http://api.thingspeak.com/update?api_key=9X3LFQDD0RDACX82";

const char* ssid = "IoTExperiment";
const char* password = "iotexperiment303ab";

unsigned long previousMillis = 0;
unsigned long interval = 30000;
unsigned long timerDelay = 60000;
unsigned long lastTime = 55000;
unsigned long ledTime = 0;
bool flag = 0;

LiquidCrystal_I2C lcd(0x3F, 16, 2);  

void setup() {
  pinMode(26, OUTPUT);
  pinMode(27, OUTPUT);
  Serial.begin(115200);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  Serial.print("Connecting to WiFi ..");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print('.');
    delay(1000);
  }
  Serial.println(WiFi.localIP());
  Serial.print("RRSI: ");
  Serial.println(WiFi.RSSI());

  
  // initialize LCD
  lcd.init();
  // turn on LCD backlight                      
  lcd.backlight();
}

void loop() {
  // if WiFi is down, try reconnecting every CHECK_WIFI_TIME seconds
  unsigned long currentMillis = millis();
  if ((WiFi.status() != WL_CONNECTED) && (currentMillis - previousMillis >=interval)) {
    Serial.print(millis());
    Serial.println("Reconnecting to WiFi...");
    WiFi.disconnect();
    WiFi.reconnect();
    previousMillis = currentMillis;
  }
  //GET request
  if ((millis() - lastTime) > timerDelay) {
    // Check WiFi connection status
    if(WiFi.status()== WL_CONNECTED){
      WiFiClient client;
      HTTPClient http;

      String serverPath = serverName + "&field1=" + String(random(40));
      
      // Your Domain name with URL path or IP address with path
      http.begin(client, serverPath.c_str());
      
      // Send HTTP GET request
      int httpResponseCode = http.GET();
      
      if (httpResponseCode>0) {
        Serial.print("HTTP Response code: ");
        Serial.println(httpResponseCode);
        String payload = http.getString();
        Serial.println(payload);

        lcd.setCursor(0, 0);
        lcd.print("HTTPresponse ");
        lcd.setCursor(13, 0);
        lcd.print(httpResponseCode);
        lcd.setCursor(0, 1);
        lcd.print("Payload ");
        lcd.setCursor(8, 1);
        lcd.print(payload);
      }
      else {
        Serial.print("Error code: ");
        Serial.println(httpResponseCode);
      }
      // Free resources
      http.end();
      flag = 1;
      ledTime = millis();
      digitalWrite(26, 1);
      digitalWrite(27, 1);
    }
    else {
      Serial.println("WiFi Disconnected");
    }
    lastTime = millis();
  }

if(flag == 1){
  if(millis() - ledTime >= 500){
    flag = 0;
    digitalWrite(26, 0);
    digitalWrite(27, 0);
  }
}

}